d<-read.csv(file.choose(),header=TRUE)
d
d<-read.csv(file.choose(),header=TRUE)
head(d)
kruskal.test(TC.BA ~ Method, data = d)
kruskal.test(TC.BG ~ Method, data = d)
kruskal.test(TC.DA ~ Method, data = d)
kruskal.test(TC.DG ~ Method, data = d)
d$Method = factor(d$Method, levels=c("TMIP", "H1", "H2"))
d$Method
d$Method
d$Method
d$Method = factor(d$Method, levels=c("TMIP", "Heuristic_1", "H2"))
d$Method
?p.adjust
library(FSA)
install.packages("FSA")
library(FSA)
PT = dunnTest(TC.BG ~ Method,data=a,method="bonferroni") # Can adjust p-values;
PT = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PT
PT = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PT
d$TC.BG
d$Method
d<-read.csv(file.choose(),header=TRUE)
d$Method
kruskal.test(TC.BA ~ Method, data = d)
kruskal.test(TC.BG ~ Method, data = d)
d$Method = factor(d$Method, levels=c("TMIP", "H1", "H2"))
library(FSA)
PT = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PT
PT1 = PT$res
PT1
cldList(comparison = PT$Comparison, p.value= PT$P.adj,threshold  = 0.05)
library(rcompanion)
install.packages("rcompanion")
library(rcompanion)
cldList(comparison = PT$Comparison, p.value= PT$P.adj,threshold  = 0.05)
cldList(comparison = PT$Comparison, p.value= PT$P.adj,threshold  = 0.01)
cldList(comparison = PT$Comparison, p.value= PT$P.adj,threshold  = 0.00005)
cldList(comparison = PT$Comparison, p.value= PT$P.adj,threshold  = 0.0000)
cldList(comparison = PT$Comparison, p.value= PT$P.adj,threshold  = 0.05)
PT = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PT
PT1 = NemenyiTest(x = d$TC.BG, g = d$Method, dist="tukey")
install.packages("DescTools")
library(DescTools)
PT1 = NemenyiTest(x = d$TC.BG, g = d$Method, dist="tukey")
PT1
d$Method = factor(d$Method, levels=c("TMIP", "H1", "H2"))
d$Method
kruskal.test(TC.DA ~ Method, data = d)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
library(FSA)
library(DescTools)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
kruskal.test(TC.DA ~ Method, data = d)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
library(rcompanion)
cldList(comparison = PT_D2$Comparison,p.value    = PT$P.adj,threshold  = 0.01)
cldList(comparison = PT_D2$Comparison,p.value    = PT$P.adj,threshold  = 0.01)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
cldList(comparison = PH_D2$Comparison,p.value = PH_D2$P.adj,threshold  = 0.01)
kruskal.test(TC.DA ~ Method, data = d)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
PH_N2 = NemenyiTest(x = d$TC.DA, g = d$Method, dist="tukey")
PH_N2
kruskal.test(TC.DG ~ Method, data = d)
PH_D3 = dunnTest(TC.DG ~ Method,data=d,method="bonferroni")
PH_D3
PH_N3 = NemenyiTest(x = d$TC.DG, g = d$Method, dist="tukey")
PH_N3
d<-read.csv(file.choose(),header=TRUE)
kruskal.test(TC.BA ~ Method, data = d)
library(FSA)
kruskal.test(TC.BA ~ Method, data = d)
library(FSA)
PH_D = dunnTest(TC.BA ~ Method,data=d,method="bonferroni")
PH_D
d<-read.csv(file.choose(),header=TRUE)
kruskal.test(TC.BA ~ Method, data = d)
kruskal.test(TC.BG ~ Method, data = d)
library(FSA)
PH_D1 = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PH_D1
d<-read.csv(file.choose(),header=TRUE)
d
kruskal.test(TC.DA ~ Method, data = d)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
d<-read.csv(file.choose(),header=TRUE)
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.BG ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.DA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.DG ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method", title(main="B"))
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method", title(main="B"))
title(main="B")
title(main="Problem Class B - Assembly")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
title(main="Problem Class B - Assembly")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
title(main="Problem Class B - Assembly Product Structure")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.BG ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.DA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.DG ~ Method, data = d, ylab="Total Cost", xlab="Method")
kruskal.test(TC.DA ~ Method, data = d)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
d<-read.csv(file.choose(),header=TRUE)
head(d)
kruskal.test(TC.BA ~ Method, data = d)
boxplot(TC.BG ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.BG ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.DA ~ Method, data = d, ylab="Total Cost", xlab="Method")
boxplot(TC.DG ~ Method, data = d, ylab="Total Cost", xlab="Method")
d<-read.csv(file.choose(),header=TRUE)
kruskal.test(TC.BG ~ Method, data = d)
library(FSA)
PH_D1 = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PH_D1
options(scipen=999)
kruskal.test(TC.BA ~ Method, data = d)
kruskal.test(TC.BG ~ Method, data = d)
PH_D1 = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PH_D1
kruskal.test(TC.DA ~ Method, data = d)
PH_D2 = dunnTest(TC.DA ~ Method,data=d,method="bonferroni")
PH_D2
kruskal.test(TC.DG ~ Method, data = d)
PH_D3 = dunnTest(TC.DG ~ Method,data=d,method="bonferroni")
PH_D3
meidan(TC.DA)
library("stats", lib.loc="C:/Program Files/R/R-3.4.1/library")
meidan(TC.DA)
median(TC.DA)
m
median(d$TC.DA)
median(d$TC.DA,na.rm = FALSE)
median(d$TC.DA,na.rm = TRUE)
kruskal.test(TC.DA ~ Method, data = d)
kruskal.test(TC.DG ~ Method, data = d)
kruskal.test(TC.DG ~ Method, data = d)
d<-read.csv(file.choose(),header=TRUE)
kruskal.test(TC.DG ~ Method, data = d)
d<-read.csv(file.choose(),header=TRUE)
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
install.packages("ggplot2")
library(ggplot2)
d<-read.csv(file.choose(),header=TRUE)
d
options(scipen=999)
boxplot(TC.BG ~ Method, data = d, ylab="Total Cost", xlab="Method")
ggplot(titanic, aes(x = Method, y = TotalCost)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method",
title = "Titanic Survival Rates by Age")
ggplot(d, aes(x = Method, y = TotalCost)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method",
title = "Titanic Survival Rates by Age")
ggplot(d) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method",
title = "Titanic Survival Rates by Age")
ggplot(d, aes(x = Survived, y = Age)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method",
title = "Titanic Survival Rates by Age")
d
ggplot(d, aes(x = Method, y = TotalCost)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method",
title = "Titanic Survival Rates by Age")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method",
title = "Titanic Survival Rates by Age")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_classic() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_bw() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_get() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_grey() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_gray() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
d<-read.csv(file.choose(),header=TRUE)
d
kruskal.test(TC.BA ~ Method, data = d)
kruskal.test(TC.BG ~ Method, data = d)
library(FSA)
PH_D1 = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
PH_D1
d<-read.csv(file.choose(),header=TRUE)
d
library(ggplot2)
ggplot(d, aes(x = Method, y = TC.BA)) +
theme_gray() +
geom_boxplot() +
labs(y = "Total Cost",
x = "Method")
boxplot(TC.BA ~ Method, data = d, ylab="Total Cost", xlab="Method")
#title(main="Problem Class B - Assembly Product Structure")
options(scipen=999)
kruskal.test(TC.BA ~ Method, data = d)
boxplot(TC.BG ~ Method, data = d, ylab="Total Cost", xlab="Method")
### Dunn test
# Zar (2010) states that the Dunn test is appropriate for groups with unequal numbers
# of observations.
library(FSA)
PH_D1 = dunnTest(TC.BG ~ Method,data=d,method="bonferroni") # Can adjust p-values;
